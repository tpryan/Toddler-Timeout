<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" xmlns:components="components.*" >

	<fx:Metadata>
		[Event(name="muteToggled", type="flash.events.Event")]
		[Event(name="cancel", type="flash.events.Event")]
		[Event(name="playClicked", type="flash.events.Event")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			
			
			
			[Bindable]
			private var _componentHeight:int = 0;
			[Bindable]
			private var _componentWidth:int = 0;
			[Bindable]
			private var _cancelVisible:Boolean;
			[Bindable]
			private var _muteState:String;
			
			
			public function get muteState():String { return mute.state; }
			
			
			
			public function get cancelVisible():Boolean { return _cancelVisible; }
			
			public function set cancelVisible(value:Boolean):void
			{
				if (_cancelVisible == value)
					return;
				_cancelVisible = value;
				cancel.visible = _cancelVisible;
			}
			
			
			
			public function get componentHeight():int { return _componentHeight; }
			
			public function set componentHeight(value:int):void
			{
				if (_componentHeight == value)
					return;
				_componentHeight = value;
				
				if (_componentHeight > 70){
					chrome.height = _componentHeight;
				}
				else{
					chrome.height = 70;
				}
			}
			
			public function get componentWidth():int { return _componentWidth; }
			
			public function set componentWidth(value:int):void
			{
				if (_componentWidth == value)
					return;
				_componentWidth = value;
				chrome.width = _componentWidth;
			}
			
			protected function mute_clickHandler(event:MouseEvent):void
			{
				dispatchEvent(new Event("muteToggled"));
				
			}
			
			public function switchPlayToReload():void{
				play.switchPlayToReload();
			}
			public function switchReloadToPlay():void{
				play.switchReloadToPlay();
			}
			
			protected function play_clickedHandler(event:Event):void
			{
				dispatchEvent(new Event("playClicked"));
				
			}
			
			protected function cancel_clickedHandler(event:Event):void
			{
				dispatchEvent(new Event("cancel"));
				
			}
			
		]]>
	</fx:Script>

	<s:Rect id="chrome" width="{_componentWidth}" height="{_componentHeight}" minHeight="80"  blendMode="normal" alpha=".5" radiusX="20" radiusY="20">
		<s:fill>
			<s:SolidColor color="#FFFFFF"/>
		</s:fill>
		<s:stroke>
			<s:SolidColorStroke color="#CCCCCC" weight="2" caps="round" joints="round"/>
		</s:stroke>
	</s:Rect>

	<components:PlayButton id="play" horizontalCenter="{-chrome.width/3}" verticalCenter="0"   left="{chrome.width/9}" clicked="play_clickedHandler(event)"  />	
	<components:CancelButton id="cancel"  horizontalCenter="0" verticalCenter="0"  visible="{_cancelVisible}" clicked="cancel_clickedHandler(event)" />
	<components:MuteButton id="mute" horizontalCenter="{chrome.width/3}" verticalCenter="0"  right="{chrome.width/9}" click="mute_clickHandler(event)"  />
	
</s:Group>
